<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[doge1024]]></title>
  <link href="https://doge1024.github.io/atom.xml" rel="self"/>
  <link href="https://doge1024.github.io/"/>
  <updated>2021-06-05T14:41:54+08:00</updated>
  <id>https://doge1024.github.io/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://www.mweb.im/">MWeb</generator>
  
  <entry>
    <title type="html"><![CDATA[OPENGL 学习一小步]]></title>
    <link href="https://doge1024.github.io/16227361885806.html"/>
    <updated>2021-06-04T00:03:08+08:00</updated>
    <id>https://doge1024.github.io/16227361885806.html</id>
    <content type="html"><![CDATA[
<p><img src="https://raw.githubusercontent.com/doge1024/doge1024.github.io/saveImage/image/QQ20210604-010755-HD.2021-06-04%2001_11_32.gif" alt=""/></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WebStorm调试ReactNative]]></title>
    <link href="https://doge1024.github.io/2020-05-27%2010%3A54%3A36.html"/>
    <updated>2021-05-22T15:44:11+08:00</updated>
    <id>https://doge1024.github.io/2020-05-27%2010%3A54%3A36.html</id>
    <content type="html"><![CDATA[
<h3 id="toc_0">如何使用webstorm调试：</h3>

<ol>
<li>在任意位置添加debug的红点</li>
</ol>

<p><img src="https://raw.githubusercontent.com/doge1024/doge1024.github.io/saveImage/image/1300265-eba5096825329dfb.png" alt="image" class="mw_img_left" style="width:600px;display: block; float: left; margin: 0px 8px 8px 0px;"/></p>

<ol>
<li><p>添加debug配置<br/>
<img src="https://raw.githubusercontent.com/doge1024/doge1024.github.io/saveImage/image/1300265-439ddd59f9ecf888.png" alt="image" class="mw_img_center" style="width:600px;display: block; clear:both; margin: 0 auto;"/></p></li>
<li><p>按照图示设置debug配置<br/>
<img src="https://raw.githubusercontent.com/doge1024/doge1024.github.io/saveImage/image/1300265-3f1e5ef486d17e12.png" alt="image" class="mw_img_center" style="width:600px;display: block; clear:both; margin: 0 auto;"/></p>
<ul>
<li><code>Bundler host</code> 可以调整，看自己的RN是从哪个地址加载的，从localhost加载，就设置为localhost，从ip加载就填ip</li>
<li>这个配置会帮你自动<code>start</code>RN的服务，请先终止其他地方占用8081端口的服务</li>
</ul></li>
<li><p>打开debug<br/>
<img src="https://raw.githubusercontent.com/doge1024/doge1024.github.io/saveImage/image/1300265-39308d40048971e3.png" alt="image" class="mw_img_center" style="width:600px;display: block; clear:both; margin: 0 auto;"/></p></li>
<li><p>在手机上摇一摇，打开<code>Debug JS Remotely</code> 就可以打断点调试了, 之前的断点也可以暂停到了<br/>
<img src="https://raw.githubusercontent.com/doge1024/doge1024.github.io/saveImage/image/1300265-e16c96bffff93a01.png" alt="image" class="mw_img_center" style="width:600px;display: block; clear:both; margin: 0 auto;"/></p></li>
</ol>

<h5 id="toc_1">我的 webstorm 版本：</h5>

<p><img src="https://raw.githubusercontent.com/doge1024/doge1024.github.io/saveImage/image/1300265-8d6e1fca99bc9267.png" alt="image" class="mw_img_center" style="width:600px;display: block; clear:both; margin: 0 auto;"/></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[codepush服务变更，连接不上]]></title>
    <link href="https://doge1024.github.io/2020-05-27%2010%3A45%3A10.html"/>
    <updated>2021-05-22T15:44:11+08:00</updated>
    <id>https://doge1024.github.io/2020-05-27%2010%3A45%3A10.html</id>
    <content type="html"><![CDATA[
<p>后台codepush的服务器地址变了，连接不上，不能退出<br/>
删除本地<code>./.code-push.config</code>文件解决</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[小米手机安装linuxdeploy碰到的问题]]></title>
    <link href="https://doge1024.github.io/2020-03-28%2014%3A20%3A52.html"/>
    <updated>2021-05-22T15:44:11+08:00</updated>
    <id>https://doge1024.github.io/2020-03-28%2014%3A20%3A52.html</id>
    <content type="html"><![CDATA[
<h3 id="toc_0">发生的错误</h3>

<p>设置好配置，进行安装时报以下错误</p>

<pre><code class="language-text">Mounting partitions :
/ ... fail
</code></pre>

<p>打开调试模式后</p>

<pre><code class="language-text">Mounting partitions:  
/ ... mount: mounting /dev/loop0 on /data/local/mnt failed: invalid argument
fail 
</code></pre>

<h3 id="toc_1">解决方法</h3>

<p>点击右下角设置按钮，将安装类型设置为 &quot;目录&quot;，返回重新安装可以成功</p>

<p>参考文章：<br/>
<a href="https://cloud.tencent.com/developer/article/1159800">https://cloud.tencent.com/developer/article/1159800</a><br/>
<a href="https://pluhuxc.github.io/2020/10/23/linuxdeploy-guide.html">https://pluhuxc.github.io/2020/10/23/linuxdeploy-guide.html</a><br/>
<a href="https://www.tkdcz.top/post/48.html">https://www.tkdcz.top/post/48.html</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[macOS 10.15 pip 安装库失败提示SSL]]></title>
    <link href="https://doge1024.github.io/2020-01-19%2001%3A09%3A37.html"/>
    <updated>2021-05-22T15:44:11+08:00</updated>
    <id>https://doge1024.github.io/2020-01-19%2001%3A09%3A37.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">pip安装第三方库失败</h2>

<p>今天安装 <code>frida-tools</code> 时一直提示失败<br/>
其中错误有一句:<br/>
<code>error: &lt;urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed</code></p>

<p>或者：</p>

<pre><code class="language-text">$ /usr/bin/python3 -c &#39;import urllib.request; urllib.request.urlopen(&quot;https://www.apple.com/&quot;)&#39;
...
urllib.error.URLError: &lt;urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1056)&gt;
</code></pre>

<blockquote>
<p>我的系统环境：<br/>
macOS Catalina 10.15.2 (19C57)<br/>
已安装Xcode11，并且Xcode有带Python3.7</p>
</blockquote>

<h2 id="toc_1">解决方案</h2>

<p>执行以下两行命令：</p>

<pre><code class="language-text">/usr/bin/sudo /bin/mkdir /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.7/etc
/usr/bin/sudo /bin/ln -s /etc/ssl/ /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.7/etc/
</code></pre>

<p>我出问题时的Xcode，默认是没有<code>/etc</code>这个目录的；使用以上命令后，可以正常安装<code>frida-tools</code></p>

<h4 id="toc_2">参考文章</h4>

<p><a href="https://stackoverflow.com/questions/57630314/ssl-certificate-verify-failed-error-with-python3-on-macos-10-15">ssl-certificate-verify-failed-error-with-python3-on-macos-10-15</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[读《时间简史》— 解释你无聊时的那些遐想]]></title>
    <link href="https://doge1024.github.io/2019-08-06%2001%3A24%3A23.html"/>
    <updated>2021-05-22T15:44:11+08:00</updated>
    <id>https://doge1024.github.io/2019-08-06%2001%3A24%3A23.html</id>
    <content type="html"><![CDATA[
<p>《时间简史》讲述是探索时间和空间核心秘密的故事，是关于宇宙本性的最前沿知识，包括我们的宇宙图像、空间和时间、膨胀的宇宙不确定性原理、基本粒子和自然的力、黑洞、黑洞不是这么黑、时间箭头等内容。</p>

<p>原先看过一点但是感觉有点枯燥，跟视频比起来缺少了些生动震撼的场面，不太好理解，这次看的是插画版的，会容易接受很多。所以如果想看的话，推荐看插画版的。</p>

<p>如果不太喜欢文字的描述，这里推荐一部视频 <a href="https://www.bilibili.com/video/av1935063/">《宇宙的构造》</a>，看完视频后会激起你对宇宙探索的欲望，再来看书会好些。视频里面讲解的也很好。</p>

<h2 id="toc_0">有几个孩子，能抵御星空的诱惑呢 ~</h2>

<p>小时候特喜欢去房顶上躺着，微风，虫鸣，不知不觉眼镜就看向了天空：天这么大，这么远，天上有云有星，但是天是什么？天的外面又是什么？经常看的《走进科学》里面的那些事是不是真的？51区又有多少外星生命来过？</p>

<p>前些日子无聊又看了一遍(我自封的)古装情景喜剧的巅峰《武林外传》，里面吕秀才有句台词：“我和宇宙有必然的联系吗？宇宙是否有尽头，时间是否有长短，过去的时间在哪里消失了，未来的时间又在何处停止，我在这一刻提出的问题，还是你刚才听到的问题吗？”。这句话第一次看的时候可能感叹编剧的厉害，对秀才这个读书人刻画的太好了，一笑而过，但是这次看却让我心里一颤，这不就是我小时候对世界的疑问么。</p>

<p>解决自己一直以来的疑问，解释自己无聊时的那些遐想，这就是我读这本书的原因。</p>

<h2 id="toc_1">书中的答案</h2>

<p>“四方上下曰宇，往古来今曰宙”，这句话太经典了，作为比较朴素的对宇宙的解释，可以帮助我们了解宇宙，但是还是有点笼统，有些哲学意味。</p>

<p>下面简单写一些问题在书中的答案。一切了解均是在学习，所以引用原文来解答。</p>

<h4 id="toc_2">宇宙是如何诞生的？</h4>

<p>引书中言：</p>

<blockquote>
<p>1983年，林德提出了一个更好的所谓混沌暴胀模型。这里没有相变和过冷，而代之以存在一个自旋为0的场，由于它的量子涨落，在早期宇宙的某些区域有大的场值。在那些区域中，场的能量起到宇宙常数的作用，它具有排斥的引力效应，而使这些区域以暴胀的形式膨胀。随着它们膨胀，它们中的场的能量慢慢地减小，直到暴胀改变到犹如热大爆炸模型中的膨胀时为止。这些区域之一就成为可观察的宇宙让我们看到。</p>
</blockquote>

<p>量子涨落，是从真空中爆发能量，在空间生成了由粒子和反粒子组成的虚粒子对。粒子对借取能量而生成，又在短时间内湮灭归还能量。这些产生的虚粒子的物理效应是可以被测量和观测的。也就是说真空不是真的空无一物</p>

<h4 id="toc_3">宇宙的的外面是什么？</h4>

<p>引书中言：</p>

<blockquote>
<p>人们可以说：“宇宙的边界条件是它没有边界。”宇宙便是完全自足的，而不受任何外在于它的东西影响。它既不被创生，也不被消灭。它就是存在。</p>
</blockquote>

<h4 id="toc_4">是否存在造物主？</h4>

<p>引书中言：</p>

<blockquote>
<p>只要宇宙有一个开端，我们就可以设想存在一个造物主。但是，如果宇宙的的确确是完全自足的，没有边界或边缘，它就既没有开端也没有终结：它就是存在。那么，还会有造物主存身之处吗？</p>
</blockquote>

<h4 id="toc_5">时间是否有起点？</h4>

<p>引书中言：</p>

<blockquote>
<p>所有的弗里德曼解都具有一个特点，即在过去的某一时刻（约100亿至200亿年之前）邻近星系之间的距离一定为零。在这被我们称之为大爆炸的那一时刻，宇宙的密度和时空曲率都是无限大。因为数学不能真正地处理无限大的数，这意味着，广义相对论（弗里德曼解以此为基础）预言，在宇宙中存在一点，在该处理论本身崩溃。这样的点正是数学中称为奇点的一个例子。事实上，我们所有的科学理论都是基于时空是光滑的和几乎平坦的基础上表述的，所以它们在时空曲率为无限大的大爆炸奇点处崩溃。这意味着，即使在大爆炸前存在事件，人们也不能用它们去确定其后所要发生的事件，因为可预见性在大爆炸处崩溃了。</p>

<p>我们只知道在大爆炸后发生的事件，我们就不能确定在这之前发生什么。就我们而言，大爆炸之前的事件不能有后果，所以并不构成我们宇宙的科学模型的一部分。因此，我们应将它们从模型中割除掉，并宣称时间是从大爆炸开始的。</p>
</blockquote>

<h4 id="toc_6">宇宙是否有终点？</h4>

<p>引书中言：</p>

<blockquote>
<p>1915年之前，空间和时间被认为是事件在其中发生的固定舞台，而它们不受在其中发生的事件的影响。即便在狭义相对论中，这也是对的。物体运动，力吸引并排斥，但时间和空间则完全不受影响地延伸着。空间和时间很自然地被认为无限地向前延伸。<br/>
然而在广义相对论中，情况则完全不同。这时，空间和时间变成为动力量：当物体运动，或者力作用时，它影响了空间和时间的曲率；反过来，时空的结构影响了物体运动和力作用的方式。空间和时间不仅去影响、而且被发生在宇宙中的每一件事影响。正如人们没有空间和时间的概念不能谈论宇宙的事件一样，同样地，在广义相对论中，在宇宙界限之外讲空间和时间也是没有意义的。</p>

<p>罗杰·彭罗斯和我证明了，爱因斯坦广义相对论意味着，宇宙必须有个开端，并且可能有个终结。</p>
</blockquote>

<h4 id="toc_7">可否实现时间旅行？</h4>

<p>如果可以进行时间旅行，为什么没有未来的人来告诉我们如何做呢？为什么地球没有被从未来旅行来的人挤爆？<br/>
到写文时间为止，时间旅行机器应该都没有被发明出来。</p>

<blockquote>
<p>任何时间旅行都被限制于未来。</p>

<p>黑洞辐射表明，量子理论在微观尺度上允许在时间中的往回运动，而且这种时间旅行能产生可观测的效应。</p>
</blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS 禁用黑暗模式]]></title>
    <link href="https://doge1024.github.io/2019-07-10%2011%3A10%3A07.html"/>
    <updated>2021-05-22T15:44:11+08:00</updated>
    <id>https://doge1024.github.io/2019-07-10%2011%3A10%3A07.html</id>
    <content type="html"><![CDATA[
<p>如果你的公司没有设计黑暗模式，在iOS13到来之际，你需要在应用内禁止一下黑暗模式的显示：<br/>
在程序的Info.plist文件中加入:</p>

<p>key: <code>UIUserInterfaceStyle</code><br/>
value: <code>Light</code></p>

<p><img src="https://raw.githubusercontent.com/doge1024/doge1024.github.io/saveImage/image/1300265-6b528dd2af04f202.png" alt="fileName" class="mw_img_center" style="width:600px;display: block; clear:both; margin: 0 auto;"/></p>

<p>参考：<br/>
<a href="https://developer.apple.com/documentation/appkit/supporting_dark_mode_in_your_interface/choosing_a_specific_interface_style_for_your_ios_app">苹果文档，只支持正常模式</a><br/>
<a href="https://developer.apple.com/documentation/appkit/supporting_dark_mode_in_your_interface">想去支持黑暗模式，查看文档</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[macOS 存储空间越来越少, 删完不增加可用空间]]></title>
    <link href="https://doge1024.github.io/2019-06-20%2014%3A44%3A49.html"/>
    <updated>2021-05-22T15:44:11+08:00</updated>
    <id>https://doge1024.github.io/2019-06-20%2014%3A44%3A49.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">问题</h2>

<p><code># macOS Catalina 10.15 beta 1 #</code> <br/>
升级 macOS Catalina 10.15 beta 1 后发现存储空间越来越少，怎么删除文件都不管用。文件越删越多。</p>

<h2 id="toc_1">原因</h2>

<p>因为 Time Machin 的 <code>local snapshots</code>(本地快照功能)，在你打开自动备份，但是没有接入任何硬盘的时候，系统会从本地创建并存储快照。<br/>
按道理来说此项功能很好，可以帮一些没有或者忘记带硬盘的人自动备份，而且对用户来说应该是不占用存储空间的。<br/>
<strong>但是</strong> 显然新系统出现了bug，导致了存储空间不能得到及时释放的情况。</p>

<p>从苹果官网的解释是：</p>

<blockquote>
<p>### How local snapshots use storage space<br/>
You don&#39;t need to think about how much storage space local snapshots are using, because they don&#39;t use space needed for tasks like downloading files, copying files, or installing new software.</p>

<p>Your Mac counts the space used by snapshots as available storage. Even so, Time Machine stores snapshots only on disks that have plenty of free space, and it automatically deletes snapshots as they age or as space is needed for other things.</p>
</blockquote>

<p>google 翻译：</p>

<blockquote>
<h3 id="toc_2">本地快照如何使用存储空间</h3>

<p>您无需考虑本地快照正在使用多少存储空间，因为它们不会使用下载文件，复制文件或安装新软件等任务所需的空间。</p>

<p>您的Mac将快照使用的空间计为可用存储空间。即便如此，Time Machine仅将快照存储在具有足够可用空间的磁盘上，并且在它们老化或其他内容需要空间时自动删除快照。搜索</p>
</blockquote>

<p>可以google自己搜索关键字 <a href="https://www.google.com/search?newwindow=1&amp;rlz=1C5CHFA_enUS691US691&amp;ei=xyMLXcTkHMqU-gSQrZ2YDw&amp;q=About+Time+Machine+local+snapshots&amp;oq=About+Time+Machine+local+snapshots&amp;gs_l=psy-ab.3...0.0..231404...0.0..0.0.0.......0......gws-wiz.kx7n-Vqtt_M">About Time Machine local snapshots</a>，苹果官网的<a href="https://support.apple.com/en-us/HT204015">文章</a>已经删除，可以通过网页快照查看。</p>

<h2 id="toc_3">解决方案：</h2>

<h5 id="toc_4">如果你的电脑已经剩余空间太少，导致开不开机，请使用 Time Machine ，进行恢复。以下解决方案仅适用可开机用户</h5>

<ul>
<li><h6 id="toc_5">小白大神皆可使用：</h6>
<ol>
<li> 从菜单栏中的 Time Machine 菜单打开 Time Machine 偏好设置  。或者选择 Apple菜单&gt;系统偏好设置，然后单击 Time Machine。</li>
<li> 取消选择“自动备份”或单击“关闭/打开”开关，具体取决于您在 Time Machine 偏好设置中看到的内容。</li>
<li> 等待几分钟以允许删除本地快照。然后再次打开 Time Machine 。它会记的使用您的备份磁盘。</li>
<li><em>此方案未经本人验证，我使用的是下面的方法</em></li>
</ol></li>
<li><h6 id="toc_6">使用终端命令：</h6>
<ol>
<li>使用 tmutil 命令， <code>tmutil listlocalsnapshotdates</code> 列出所以本地快照</li>
<li>使用 <code>tmutil deletelocalsnapshots xxx</code> 删除对应快照</li>
<li>删除了三个快照后，本地剩余空间从 2G 升为 77G</li>
<li>可选 <code>sudo tmutil disable localsnapshots</code> 从终端关闭本地快照备份功能，和手动关闭 “自动备份” 功能效果一样</li>
</ol></li>
</ul>

<p><img src="https://raw.githubusercontent.com/doge1024/doge1024.github.io/saveImage/image/20210605143443.png" alt="20210605143443" class="mw_img_center" style="width:600px;display: block; clear:both; margin: 0 auto;"/></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[flutter 入坑问题收集(更新中)]]></title>
    <link href="https://doge1024.github.io/2019-06-14%2010%3A16%3A35.html"/>
    <updated>2021-05-22T15:44:11+08:00</updated>
    <id>https://doge1024.github.io/2019-06-14%2010%3A16%3A35.html</id>
    <content type="html"><![CDATA[
<ol>
<li><p>💖字符号不显示</p>
<ol>
<li>You need to set uses-material-design: true in pubspec.yaml for the icons to be included in the app. <a href="https://stackoverflow.com/questions/50786982/flutter-icons-do-not-show">stackoverflow</a></li>
</ol></li>
<li><p>执行更新库：packages get 命令，会卡住，一直lock状态</p>
<ol>
<li>找到自己的flutter的路径 </li>
<li>删除cache中的lockfile <code>rm /Users/xxx/development/flutter/bin/cache/lockfile</code></li>
</ol></li>
</ol>

<pre><code class="language-text">Waiting for another flutter command to release the startup lock...
</code></pre>

<ol>
<li><p>打开安卓模拟器提示 <code>Broken AVD system path. Check your ANDROID_SDK_ROOT value</code></p>
<p>原因是 <code>ANDROID_HOME</code> 和 <code>ANDROID_SDK_ROOT</code> 配置的不对<br/>
在Android studio找到：File/Other Settings/Default Project Structure...<br/>
里面会有 Android sdk location, 此路径才是<code>ANDROID_HOME</code>的路径，将<code>ANDROID_HOME</code> 和 <code>ANDROID_SDK_ROOT</code>更新为此目录就可以了</p></li>
</ol>

<p><img src="https://raw.githubusercontent.com/doge1024/doge1024.github.io/saveImage/image/20210605143407.png" alt="20210605143407" class="mw_img_center" style="width:1024px;display: block; clear:both; margin: 0 auto;"/></p>

<pre><code class="language-text">4. flutter使用墙内加速
</code></pre>

<p>原文链接 ：<a href="https://flutter.dev/community/china">https://flutter.dev/community/china</a></p>

<pre><code class="language-text">export PUB_HOSTED_URL=https://pub.flutter-io.cn
export FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS electra 越狱后 TweakInject 不加载插件的问题]]></title>
    <link href="https://doge1024.github.io/2019-05-16%2019%3A13%3A19.html"/>
    <updated>2021-05-22T15:44:11+08:00</updated>
    <id>https://doge1024.github.io/2019-05-16%2019%3A13%3A19.html</id>
    <content type="html"><![CDATA[
<ol>
<li>使用ssh链接手机，&#39;ssh root@192.168.0.4&#39;, 默认密码 <code>alpine</code></li>
<li>执行下面命令
<code>mv /Library/TweakInject /Library/TweakInject.bak &amp;&amp; ln -s /Library/MobileSubstrate/DynamicLibraries /Library/TweakInject</code></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WKWebView 的性能优化]]></title>
    <link href="https://doge1024.github.io/2019-03-21%2015%3A46%3A56.html"/>
    <updated>2021-05-22T15:44:11+08:00</updated>
    <id>https://doge1024.github.io/2019-03-21%2015%3A46%3A56.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">起因</h2>

<p>随着移动设备性能不断增强，web 页面的性能体验逐渐变得可以接受，又因为 web 开发模式的诸多好处(跨平台，动态更新，减体积，无限扩展)，APP 客户端里出现越来越多内嵌 web 页面），很多 APP 把一些功能模块改成用 H5 实现。</p>

<p>虽然说 H5 页面性能变好了，但如果没针对性地做一些优化，体验还是很糟糕的，主要两部分体验：</p>

<ol>
<li>页面启动白屏时间：打开一个 H5 页面需要做一系列处理，会有一段白屏时间，体验糟糕。</li>
<li>响应流畅度：由于 webkit 的渲染机制，单线程，历史包袱等原因，页面刷新/交互的性能体验不如原生。</li>
</ol>

<p>由于以上原因，公司准备从第一点入手，做 webview 的优化项目(达到秒开         webview )。因为<code>UIWebView</code>在 iOS12 就被标记废弃了，所以决定先从<code>WKWebView</code>入手研究。</p>

<h2 id="toc_1">思路</h2>

<h3 id="toc_2">webview 加载过程</h3>

<p><img src="https://raw.githubusercontent.com/doge1024/doge1024.github.io/saveImage/image/20210605142844.png" alt="20210605142844"/></p>

<p>打开一个页面的过程有很多优化点，包括前端和客户端，常规的前端和后端的性能优化已有前辈们总结过最佳实践，主要的是：</p>

<ul>
<li>降低请求量：合并资源，减少 HTTP 请求数，minify / gzip 压缩，webP，lazyLoad。</li>
<li>加快请求速度：预解析DNS，减少域名数，并行加载，CDN 分发。</li>
<li>缓存：HTTP 协议缓存请求，离线缓存 manifest，离线数据缓存 localStorage。</li>
<li>渲染：JS/CSS优化，加载顺序，服务端渲染模板直出。</li>
<li>客户端：预请求web所需数据<br/>
大家可以看出，主要是第三阶段之前，用户看到的页面一直处于白屏。首先要优化的就是这段时间。<br/>
打开一个页面的过程有很多优化点，包括前端和客户端，常规的前端和后端的性能优化已有前辈们总结过最佳实践，主要的是：</li>
</ul>

<p>下面只讲客户端优化部分：</p>

<h4 id="toc_3">减少第一阶段耗时</h4>

<ol>
<li>在使用前预先初始化好 webView，从而减小耗时。</li>
<li>在初始化的同时，通过 Native 来完成一些网络请求等过程，使得 webView 初始化不是完全的阻塞后续过程。</li>
<li>webview 池，可以用两个或多个 webview 重复使用，而不是每次打开 H5 都新建 webview。</li>
</ol>

<h4 id="toc_4">减少第二阶段耗时</h4>

<ol>
<li>离线包
<ol>
<li>预先下载离线包，可以达到立即展示的效果。</li>
<li>离线包可以很方便地根据版本做增量更新。</li>
<li>离线包以压缩包的方式下发，同时会经过加密和校验，防止运营商和第三方对其劫持篡改。</li>
</ol></li>
<li>数据缓存
<ol>
<li>第一次打开会有延迟，但是后续打开就会很快</li>
<li>可以自己控制缓存，方便管理</li>
</ol></li>
<li>客户端代替请求
<ol>
<li>客户端可以在网络请求上做像 DNS 预解析/ IP 直连/长连接/并行请求等更细致的优化</li>
</ol></li>
</ol>

<h2 id="toc_5">难点</h2>

<p>方案是通用的，不区分 UIWebView  和 WKWebView，但是目前很少有以 WKWebView 为目标的方案，那么以上技术方案在 WKWebView 中实现有什么难点呢？<br/>
难点在 <a href="%5Bhttps://developer.apple.com/documentation/foundation/nsurlprotocol%5D(https://developer.apple.com/documentation/foundation/nsurlprotocol)">NSURLProtocol</a></p>

<h4 id="toc_6">WKWebView 无法使用 NSURLProtocol 拦截 http 请求</h4>

<p>这个问题网上早有方案：<br/>
    <code>[WKBrowsingContextController registerSchemeForCustomProtocol:@&quot;schemes&quot;];</code></p>

<h4 id="toc_7">WKWebView 使用 NSURLProtocol 拦截后，HTTPBody的数据会丢失</h4>

<p>从网上克隆了 webkit 进行编译调试，尝试解决 Body 丢失的问题（体验到了啥叫大型项目的编译速度）<br/>
<img src="https://raw.githubusercontent.com/doge1024/doge1024.github.io/saveImage/image/20210605142916.png" alt="20210605142916" class="mw_img_center" style="width:1024px;display: block; clear:both; margin: 0 auto;"/><br/>
从图上重点标注的地方可以看到：</p>

<ol>
<li><p>WKWebView 的网络请求是在另外一个进程中操作的，然后如果 app 主进程需要拦截请求的话，通过 XPC 来进行两个进程间的通信。</p></li>
<li><p>苹果出于性能或其他考虑，会在给主进程的 URLProtocol 传输请求时将 <code>HTTPBody</code> 和 <code>HTTPBodyStream</code> 置为 nil 。<br/>
<a href="https://github.com/doge1024/webkit/blob/ce05715c8e1034db2e1ac99dde920c41b47b9534/Source/WebKit/Shared/mac/WebCoreArgumentCodersMac.mm#L195-L201">源代码</a></p></li>
</ol>

<h5 id="toc_8">尝试解决方案：</h5>

<ol>
<li> 使用 runtime 黑魔法，在其将 HTTPBody 置为 nil 之前，先保存下来？<br/>
因为网络请求是在其他进程中操作，没有办法在主进程使用 runtime 进行拦截。也就是说在 app 中决定拦截 http 请求的那一刻起，拦截到的请求注定是没有 HTTPBody 的。</li>
<li>使用 任何方式进入到 Networking 进程做一些操作 ？<br/>
尝试了 Mac 端的 XPC demo，XPC 的回调是在各自进程，是不能操作其他进程的。</li>
<li>在 <code>HTTPBody</code> 置为 nil 之前，是否会有代码走到主进程，然后拿到 request 进行操作？<br/>
抱歉，经过测试，在 <code>HTTPBody</code> 置为 nil 之前，主进程不会收到关于 request 的调用</li>
</ol>

<p><img src="https://raw.githubusercontent.com/doge1024/doge1024.github.io/saveImage/image/20210605142954.png" alt="xpc 的 demo" class="mw_img_center" style="width:1024px;display: block; clear:both; margin: 0 auto;"/></p>

<h2 id="toc_9">解决</h2>

<p>难到就没有任何方法解决了么？无意中看到一个特别有趣的想法又点燃了我的希望。</p>

<p>既然 Networking 进程会将  <code>HTTPBody</code> 置为 nil ，那我要做的就是两点：<br/>
    1. 不让其置为 nil <br/>
    2. 或者在其置为 nil 之前，先将 <code>HTTPBody</code> 保存下来</p>

<p>第一点：上面已经尝试失败；第二点：在 native 端也尝试失败，那在 H5 侧做保存操作呢？<br/>
要拦截的是 H5 的请求，那说明 H5 侧肯定是知道请求参数的。</p>

<h4 id="toc_10">尝试 H5 与 native 结合来解决 <code>HTTPBody</code> 丢失问题</h4>

<p>H5 发起发起请求有三种方式：<br/>
     1. <strong><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement"><code>Form</code></a></strong><br/>
    2. <strong><a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest"><code>XMLHttpRequest</code></a></strong><br/>
    3. <strong><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API"><code>Fetch</code></a></strong></p>

<p><code>Fetch</code>是在 iOS10 以后支持的，从通用场景看，只需要处理 <code>Form</code> 和 <code>XMLHttpRequest</code> 发起的带 <code>HTTPBody</code> 的请求就可以.</p>

<p>基本所有 H5 开发者，肯定知道 H5 里面也有黑魔法，就是原型：<br/>
<code>XMLHttpRequest</code> 对应的是 <code>XMLHttpRequest.prototype.send</code> 方法<br/>
<code>Form</code> 对应的是 <code>HTMLFormElement.prototype.submit</code> 方法</p>

<p>我们对以上方法使用 <code>WKUserScript</code> 在 <code>WKUserScriptInjectionTimeAtDocumentStart</code> 时机做对应拦截。这样 H5 在发起请求前，先将 POST 的数据发送给 native 存储(<code>WKScriptMessageHandler</code>)。然后在 native 拦截到匹配到的请求，尝试接管，并重新设置 <code>HTTPBody</code>，而且由于拦截到的是 request ，只需要补齐<code>HTTPBody</code>，其他在 h5 中原本对 request 做的各种操作也是存在的，这样就能解决问题了</p>

<p>这个方法提供了一种解决<code>HTTPBody</code> 丢失问题的可能，并且大部分 app，使用应该完全够用。本人已经按照上述方案实现，并接入到 app 中，在解决了一些细节问题后，将各个流程中的 H5 页面走了一遍，目前没有发现不支持的请求。</p>

<hr/>

<p>感兴趣的可以自己下载编译 <a href="https://github.com/doge1024/webkit">webkit</a><br/>
<a href="https://github.com/doge1024/XPCDemo.git">XPCDemo</a></p>

<hr/>

<p>参考：<br/>
<a href="https://tech.meituan.com/2017/06/09/webviewperf.html">WebView性能、体验分析与优化</a><br/>
<a href="https://blog.cnbang.net/tech/3477/">移动 H5 首屏秒开优化方案探讨<br/>
</a> <a href="https://github.com/li6185377/IMYWebLoader.git">IMYWebLoader</a><br/>
<a href="https://github.com/Tencent/VasSonic.git">VasSonic</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS 自定义导航栏滑动返回取消后出现三个小点(标题栏错乱)解决方案]]></title>
    <link href="https://doge1024.github.io/2019-02-14%2019%3A16%3A40.html"/>
    <updated>2021-05-22T15:44:11+08:00</updated>
    <id>https://doge1024.github.io/2019-02-14%2019%3A16%3A40.html</id>
    <content type="html"><![CDATA[
<p>同事发现在iOS10系统操作滑动返回，然后半路取消后，导航栏会多出三个小点</p>

<p><img src="https://raw.githubusercontent.com/doge1024/doge1024.github.io/saveImage/image/20210605142430.png" alt="20210605142430" class="mw_img_center" style="width:300px;display: block; clear:both; margin: 0 auto;"/></p>

<h3 id="toc_0">解决方法：</h3>

<p>在 <code>viewWillAppear:</code> 方法里面加上几行代码，将title置为空字符串：</p>

<pre><code class="language-text">- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    
    if (@available(iOS 11.0, *)) {
        self.navigationItem.hidesBackButton = YES;
    } else {
        self.navigationItem.backBarButtonItem = [[UIBarButtonItem alloc] initWithTitle:@&quot;&quot; style:UIBarButtonItemStylePlain target:nil action:nil];
        self.navigationItem.hidesBackButton = YES;
    }
}

</code></pre>

<h3 id="toc_1">原因探究：</h3>

<p>查看了下图层，明显就是系统默认的返回按钮么：<br/>
<code>UINavigationBar</code> -&gt; <code>UINavigationItemButtonView</code> -&gt; <code>UILabel</code><br/>
<img src="https://raw.githubusercontent.com/doge1024/doge1024.github.io/saveImage/image/20210605142604.png" alt="20210605142604" class="mw_img_center" style="width:920px;display: block; clear:both; margin: 0 auto;"/></p>

<p>看到<code>backBarButtonItem</code>(<code>UINavigationItemButtonView</code>) 的宽高都是0，那三个点就是内部的UILabel造成的，因为宽高不够所以显示了... ，这个label的字是系统自动取的上个控制器的title，所以不使用系统自己创建的<code>backBarButtonItem</code>, 自己创建一个没有title的就可以了</p>

<h5 id="toc_2">有些文章里面写的是直接判断<code>UINavigationItemButtonView</code> 的class类型然后粗暴的隐藏掉，感觉不是最好的解决方法</h5>

<blockquote>
<p>知识点：</p>

<ol>
<li>当前控制器展示的backBarButtonItem，是上个控制器的；所以看到上面的label展示的是&lt;密码管理&gt;, 这是堆栈中&lt;修改登录密码&gt;的上个页面</li>
<li>customView在<code>backBarButtonItem</code>中是不生效的</li>
</ol>

<p>系统的注释：当此属性为nil时，导航项使用其title属性中的值创建适当的后退按钮。<br/>
<img src="https://raw.githubusercontent.com/doge1024/doge1024.github.io/saveImage/image/20210605142748.png" alt="20210605142748" class="mw_img_center" style="width:600px;display: block; clear:both; margin: 0 auto;"/></p>
</blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xcode10.0 beta运行项目出错]]></title>
    <link href="https://doge1024.github.io/2018-06-08%2011%3A15%3A19.html"/>
    <updated>2021-05-22T15:44:11+08:00</updated>
    <id>https://doge1024.github.io/2018-06-08%2011%3A15%3A19.html</id>
    <content type="html"><![CDATA[
<h3 id="toc_0">错误</h3>

<pre><code class="language-text">Showing All Errors Only
:-1: Multiple commands produce &#39;/Users/xxx/Library/Developer/Xcode/DerivedData/xxx-grhikhutwnfcetecdukkohqbygam/Build/Products/Debug-iphoneos/MGBankCard/MGBankCardResource.bundle/Info.plist&#39;:
1) Target &#39;MGBankCard-MGBankCardResource&#39; has copy command from &#39;/Users/xxx/Desktop/xy_projects/xxx/Pods/MGBankCard/demo/MGBankCard/BankCardResource/Info.plist&#39; to &#39;/Users/xxx/Library/Developer/Xcode/DerivedData/xxx-grhikhutwnfcetecdukkohqbygam/Build/Products/Debug-iphoneos/MGBankCard/MGBankCardResource.bundle/Info.plist&#39;
2) Target &#39;MGBankCard-MGBankCardResource&#39; has process command with input &#39;/Users/xxx/Desktop/xy_projects/xxx/Pods/Target Support Files/MGBankCard/ResourceBundle-MGBankCardResource-Info.plist&#39;
```

大概意思就是Info.plist重复了：
需要删除Resources目录下的info.plist，保留Support Files文件夹下的
删除后可错误可解决

版本：Xcode Version 10.0 beta (10L176w)， cocoapods 1.5.0
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[黑苹果升级10.13.4以后，usb3.0不能使用]]></title>
    <link href="https://doge1024.github.io/2018-04-21%2014%3A12%3A18.html"/>
    <updated>2021-05-22T15:44:11+08:00</updated>
    <id>https://doge1024.github.io/2018-04-21%2014%3A12%3A18.html</id>
    <content type="html"><![CDATA[
<p>解决问题需要找到EFI盘下的文件 <code>EFI/CLOVER/config.plist</code><br/>
使用Sublime Text打开，搜索KextsToPatch<br/>
<img src="https://raw.githubusercontent.com/doge1024/doge1024.github.io/saveImage/image/20210605142320.png" alt="20210605142320" class="mw_img_center" style="width:600px;display: block; clear:both; margin: 0 auto;"/></p>

<p><img src="https://raw.githubusercontent.com/doge1024/doge1024.github.io/saveImage/image/20210605142337.png" alt="20210605142337" class="mw_img_center" style="width:600px;display: block; clear:both; margin: 0 auto;"/></p>

<p>将下面文字，复制粘贴过去，并保存重启即可生效， USB3.0可以使用</p>

<pre><code class="language-text">            &lt;dict&gt;
                &lt;key&gt;Comment&lt;/key&gt;
                &lt;string&gt;USB 10.13.4+ by PMHeart&lt;/string&gt;
                &lt;key&gt;Disabled&lt;/key&gt;
                &lt;false/&gt;
                &lt;key&gt;Find&lt;/key&gt;
                &lt;data&gt;
                g32UDw+DlwQAAA==
                &lt;/data&gt;
                &lt;key&gt;InfoPlistPatch&lt;/key&gt;
                &lt;false/&gt;
                &lt;key&gt;MatchOS&lt;/key&gt;
                &lt;string&gt;10.13.x&lt;/string&gt;
                &lt;key&gt;Name&lt;/key&gt;
                &lt;string&gt;com.apple.driver.usb.AppleUSBXHCI&lt;/string&gt;
                &lt;key&gt;Replace&lt;/key&gt;
                &lt;data&gt;
                g32UD5CQkJCQkA==
                &lt;/data&gt;
            &lt;/dict&gt;
</code></pre>

<p><a href="https://www.tonymacx86.com/threads/macos-10-13-4-update.248292/page-9#post-1718100">资料地址</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ReactNative入坑: 一些常用控件的使用(五)]]></title>
    <link href="https://doge1024.github.io/2018-03-19%2000%3A13%3A00.html"/>
    <updated>2021-05-22T15:44:11+08:00</updated>
    <id>https://doge1024.github.io/2018-03-19%2000%3A13%3A00.html</id>
    <content type="html"><![CDATA[
<h5 id="toc_0">button外面要包一个View，才能设置样式</h5>

<p><a href="https://github.com/facebook/react-native/blob/master/Libraries/Components/Button.js">这里是Button的源码</a>， Button除了accessibilityLabel, color, onPress, title, disabled, testID, 这几个属性以外其他属性都不能生效， 需要外面套一个View 才能设置样式<br/>
再就是Button里面只有个自带的Text，自己往Button里塞的子控件不会显示的</p>

<h5 id="toc_1">TouchableHighlight</h5>

<p>TouchableHighlight只能有一个子控件，如果既有文字又有图片等多个控件需要使用View包装一层</p>

<h5 id="toc_2">如何设置默认props</h5>

<h3 id="toc_3">SectionList的用法</h3>

<pre><code class="language-text">
&lt;SectionList
                ListHeaderComponent={&lt;View style={{backgroundColor: &quot;red&quot;, height: 40}} &gt;&lt;/View&gt;}
                ListFooterComponent={&lt;View style={{backgroundColor: &quot;green&quot;, height: 40}} &gt;&lt;/View&gt;}
                renderItem={({item, index, section}) =&gt; &lt;Text style={{flex: 1, height: 50}}&gt;section:{section.key}----{item.title}----{index}&lt;/Text&gt;}
                renderSectionHeader={({section}) =&gt; &lt;Text style={{backgroundColor: &#39;yellow&#39;}}&gt;Header：{section.key}&lt;/Text&gt;}
                renderSectionFooter={({section}) =&gt; &lt;Text style={{backgroundColor: &#39;purple&#39;}}&gt;Footer：{section.key}&lt;/Text&gt;}
                stickySectionHeadersEnabled={false}
                sections={[
                    {
                        key: &#39;s1&#39;,
                        data: [
                            {title: &#39;0 item&#39;, key: &#39;0&#39;},
                            {title: &#39;1 item&#39;, key: &#39;1&#39;},
                            {title: &#39;2 item&#39;, key: &#39;2&#39;},
                    ]},
                    {
                        key: &#39;s2&#39;,
                        data: [
                            {title: &#39;0 item&#39;, key: &#39;0&#39;},
                            {title: &#39;1 item&#39;, key: &#39;1&#39;},
                            {title: &#39;2 item&#39;, key: &#39;2&#39;},
                            {title: &#39;3 item&#39;, key: &#39;3&#39;},
                    ]},
                ]}
            /&gt;

</code></pre>

<p>其余的属性看<a href="https://facebook.github.io/react-native/docs/sectionlist.html">官方SectionList文档</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[黑苹果升级13.3.3后，显示卡顿延迟解决办法]]></title>
    <link href="https://doge1024.github.io/2018-03-18%2023%3A19%3A46.html"/>
    <updated>2021-05-22T15:44:11+08:00</updated>
    <id>https://doge1024.github.io/2018-03-18%2023%3A19%3A46.html</id>
    <content type="html"><![CDATA[
<h3 id="toc_0">问题</h3>

<p>Xcode升级到9.2以后，可以从github直接打开*.xcodeproj 的项目<br/>
最近因为想要使用这个功能，就把家里的黑苹果升级到10.13.3 (17D47)，发现升级以后鼠标的移动和窗口变换有很大延迟</p>

<h3 id="toc_1">解决办法</h3>

<p>最新更新：更新系统到10.13.4 (17E199)，并将NVIDIA Web Driver 更新到适配的最新版就没有延迟问题了</p>

<blockquote>
<p>黑苹果配置：<br/>
主板：技嘉z270-Phoenix Gaming<br/>
显卡：GTX 1060 6GB<br/>
CPU：i7 7700k</p>
</blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[越狱第四章：免越狱企业微信抢红包功能]]></title>
    <link href="https://doge1024.github.io/2018-01-14%2022%3A28%3A31.html"/>
    <updated>2021-05-22T15:44:11+08:00</updated>
    <id>https://doge1024.github.io/2018-01-14%2022%3A28%3A31.html</id>
    <content type="html"><![CDATA[
<h1 id="toc_0">免越狱企业微信抢红包功能</h1>

<p>写这个，主要是为了：认真工作的时候却错过了老板的红包，心里不爽😂</p>

<p><img src="https://raw.githubusercontent.com/doge1024/doge1024.github.io/saveImage/image/20210605142239.gif" alt="20210605142239" class="mw_img_center" style="width:300px;display: block; clear:both; margin: 0 auto;"/></p>

<h2 id="toc_1">点击去 <a href="https://github.com/doge1024/MyWeWork.git">仓库地址</a> Star 和 运行</h2>

<h3 id="toc_2">使用</h3>

<h6 id="toc_3">- 测试使用</h6>

<ol>
<li>将脱壳后的企业微信ipa解压取得.app文件放到<code>MyWeWork/TargetApp/wework.app</code><br/></li>
<li>选择自己的BundleID和证书<br/></li>
<li>插上手机，<code>cmd+R</code><br/></li>
<li>聊天会话页面右上角有个开关，打开后，如果人发红包红包的话，会自动抢（默认打开）<br/></li>
</ol>

<h6 id="toc_4">- 正式使用</h6>

<ol>
<li>编译Release版<code>cmd+shift+i</code>，待编译完成</li>
<li>双击<code>LatestBuild/createIPA.command</code>，待进程完成后，文件夹下面会多一个ipa文件，拿去用吧</li>
</ol>

<h3 id="toc_5">效果</h3>

<ol>
<li>自动打开红包，功能只能在聊天会话页面使用，但是可以在后台，继续抢</li>
<li>仔细想了想应该不会封号，还能把你开除企业么？🤔 </li>
</ol>

<h3 id="toc_6">注意</h3>

<ol>
<li>非越狱手机推送是不可能推送的，这辈子都不会有推送</li>
<li><a href="https://github.com/harddog/MyWeWork">MyWeWork仓库地址</a></li>
</ol>

<h3 id="toc_7">感谢</h3>

<ol>
<li>感谢 <a href="https://github.com/AloneMonkey/MonkeyDev">MonkeyDev</a>，在没有越狱机的情况下还能简单的调试编写</li>
<li>感谢同事的1分钱测试红包</li>
</ol>

<p>抢红包算是完成了，issue随机更新ヽ(^o^)丿</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[适配iOS 11 与 iPhone X]]></title>
    <link href="https://doge1024.github.io/2017-09-19%2010%3A41%3A09.html"/>
    <updated>2021-05-22T15:44:11+08:00</updated>
    <id>https://doge1024.github.io/2017-09-19%2010%3A41%3A09.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>我的项目不是个性化的特别厉害，做一些简单的操作基本上就完成了新系统和机型的适配工作，碰到问题会持续更新此文章</p>
</blockquote>

<h3 id="toc_0">适配iOS 11</h3>

<p>Xcode 9 增加了<code>@available(iOS 11, *)</code> 的用法，很方便</p>

<pre><code class="language-text">if (@available(iOS 11, *)) {
        NSLog(@&quot;这是iOS 11&quot;);
    }
</code></pre>

<pre><code class="language-text">    // 适配 iOS 11， 如果打包的 Xcode 版本是9的话，可以替换为@available(iOS 11, *) 来判断
    if ([[[UIDevice currentDevice] systemVersion] doubleValue] &gt;= 11.0) {
        // 不主动设置此处为0的话，cell 和 SectionHeader、 SectionFooter 的高度 会不走代理方法
        self.tableView.estimatedSectionHeaderHeight = 0;
        self.tableView.estimatedSectionFooterHeight = 0;
        self.tableView.estimatedRowHeight = 0;
        // UIViewController 的 automaticallyAdjustsScrollViewInsets 属性已经不使用，换为下面属性
        self.tableView.contentInsetAdjustmentBehavior = UIScrollViewContentInsetAdjustmentNever;
    }
</code></pre>

<h3 id="toc_1">如何适配iPhone X</h3>

<blockquote>
<p>注意：iPhone X 的导航栏高度为44， 状态栏高度44， Tabbar 高度83</p>
</blockquote>

<ol>
<li>叫UI设计师帮你切一张 <code>1125x2436</code> 的图</li>
<li>将原先项目Assets中的LaunchImage保存一下</li>
<li>新建一个LaunchImage，将原LaunchImage中的图拖回原位，然后将 <code>1125x2436</code> 的图放入 <code>iPhone X Portrait iOS 11+</code> 的位置</li>
<li>如果你使用的是原生的Tabbar和导航控制器，此时基本已经适配完成</li>
</ol>

<p><img src="https://raw.githubusercontent.com/doge1024/doge1024.github.io/saveImage/image/20210605142213.png" alt="20210605142213" class="mw_img_center" style="width:600px;display: block; clear:both; margin: 0 auto;"/></p>

<h6 id="toc_2">大家可能碰到 iPhone X 的模拟器打印 [UIScreen mainScreen].bounds.size.height 的值为 667 的问题</h6>

<p>这种问题就是 LaunchImage 中没有 <code>iPhone X Portrait iOS 11+</code> 图片导致的，大家添加上，即可恢复正常</p>

<h3 id="toc_3">常用的宏定义</h3>

<p>判断iPhone X<br/>
<code>#define IS_IPHONEX (([[UIScreen mainScreen] bounds].size.height - 812) ? NO : YES)</code></p>

<p>Tabbar默认高度<br/>
<code>#define kTabBarHeight ((IS_IPHONEX) ? 83 : 49)</code></p>

<p>状态栏默认高度<br/>
<code>#define kStatusBarHeight ((IS_IPHONEX) ? (44) : (20))</code></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ReactNative入坑: codepush热更新(四)]]></title>
    <link href="https://doge1024.github.io/2017-07-26%2012%3A19%3A53.html"/>
    <updated>2021-05-22T15:44:11+08:00</updated>
    <id>https://doge1024.github.io/2017-07-26%2012%3A19%3A53.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">如何使用Debug环境调试code-push</h2>

<p><code>code-push</code>可以在Debug环境调试（** 真机、模拟器都可以奥**），下面介绍一下方法：</p>

<h4 id="toc_1">配置CODEPUSH_KEY</h4>

<p>在测试环境手动设置deploymentKey，需要加载Staging的更新，就设置Staging的key；</p>

<pre><code class="language-text">// 在测试环境添加下面这行代码，更改测试环境的deploymentKey
[CodePushConfig current].deploymentKey = @&quot;your_Staging_deploymentKey&quot;;
// 加载你的jsbundle地址
NSURL *jsCodeLocation = [CodePush bundleURLForResource:@&quot;index.ios&quot; withExtension:@&quot;jsbundle&quot; subdirectory:@&quot;bundles&quot;];
</code></pre>

<p>在不需要测试的时候将代码注释掉就好了， 简单方便</p>

<h4 id="toc_2">使用打包好的jsbundle进行调试</h4>

<p>大家要记住，如果使用本地服务进行调试的话，无论什么时候加载的都是本地<code>localhost:8081</code>服务的代码，更新的jsbundle代码是一定不会被加载的。所以要使用打包好的jsbundle，然后运行 真机 / 模拟器 ,就可以在Dev环境检测到<code>Staging</code>的更新，并下载</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[解决pod lib lint/repo push不支持i386编译&只能真机运行的库]]></title>
    <link href="https://doge1024.github.io/2017-07-21%2012%3A01%3A19.html"/>
    <updated>2021-05-22T15:44:11+08:00</updated>
    <id>https://doge1024.github.io/2017-07-21%2012%3A01%3A19.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">源起</h2>

<p>公司有几个私有pod库，一直使用的是<code>:git =&gt;&#39;https://xxxx.git&#39;</code>这种方式集成的，但是每次 <code>pod update</code> 的时候都需要下载一遍，而且公司的网太慢了，十分不爽(* ￣︿￣) </p>

<p><del>公司的网确实奇怪，网易云音乐听歌一点都不卡，一旦和工作有关的网就特别慢。。。老板你听我解释···</del></p>

<h2 id="toc_1">意外的事情</h2>

<p>有一些只能在真机运行的库，在<code>pod lib lint</code> 阶段就不能通过，直接报错 ， 原先做的pod都是模拟器可以运行的，所以就</p>

<pre><code class="language-text">ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)

** BUILD FAILED **
The following build commands failed:
    Ld /Users/lzh/Library/Developer/Xcode/DerivedData/App-gaskduvrghhdcwcbkdqpuxupzbfv/Build/Intermediates/App.build/Release-iphonesimulator/App.build/Objects-normal/i386/App normal i386
    Ld /Users/lzh/Library/Developer/Xcode/DerivedData/App-gaskduvrghhdcwcbkdqpuxupzbfv/Build/Intermediates/App.build/Release-iphonesimulator/App.build/Objects-normal/x86_64/App normal x86_64
(2 failures)
</code></pre>

<h2 id="toc_2">解决方法</h2>

<h3 id="toc_3">第一种：文人操作</h3>

<ul>
<li>第一种</li>
<li>在 podspec 文件中添加 <code>s.pod_target_xcconfig = { &#39;ARCHS[sdk=iphonesimulator*]&#39; =&gt; &#39;$(ARCHS_STANDARD_64_BIT)&#39; }</code>，如果项目已经设置 <code>pod_target_xcconfig</code>，添加到已有值的后面。<br/>
仅编译64位，尝试是否可以解决，不行请尝试第二种。</li>
<li>第二种</li>
<li>在 podspec 文件中添加 <code>s.pod_target_xcconfig = { &#39;VALID_ARCHS[sdk=iphonesimulator*]&#39; =&gt; &#39;&#39; }</code>，如果项目已经设置 <code>pod_target_xcconfig</code>，添加到已有值的后面。设置此处将在 模拟器编译时不产生二进制文件。
<ul>
<li><a href="https://pewpewthespells.com/blog/buildsettings.html#valid_archs">VALID_ARCHS 的描述</a></li>
</ul></li>
<li><code>pod lint</code> 命令添加 <code>--skip-import-validation</code> 参数，lint 将跳过验证 pod 是否可以导入。
<ul>
<li><a href="https://guides.cocoapods.org/terminal/commands.html#pod_lib_lint"><code>pod lint</code> 命令详情链接</a></li>
</ul></li>
<li><p><code>pod repo push</code> 命令添加 <code>--skip-import-validation</code> 参数，push 将跳过验证 pod 是否可以导入。</p>
<ul>
<li><a href="https://guides.cocoapods.org/terminal/commands.html#pod_repo_push"><code>pod repo push</code> 命令详情链接</a></li>
</ul></li>
</ul>

<ol>
<li>O鸡儿K，可以试试，不成功还有【第二种：张飞操作】</li>
</ol>

<h3 id="toc_4">第二种：张飞操作</h3>

<p>不就是编译不通过吗？<br/>
直接改源码，将编译检测跳过去，老子不编了，</p>

<p><img src="https://raw.githubusercontent.com/doge1024/doge1024.github.io/saveImage/image/20210605141915.png" alt="20210605141915" class="mw_img_center" style="width:200px;display: block; clear:both; margin: 0 auto;"/></p>

<h4 id="toc_5">检测的源码在 <code>validator.rb</code>文件 如何找到它？</h4>

<h6 id="toc_6">1. 终端 <code>gem which cocoapods</code></h6>

<p>输出：<code>/usr/local/lib/ruby/gems/2.3.0/gems/cocoapods-1.3.0.beta.2/lib/cocoapods.rb</code></p>

<h6 id="toc_7">2. 终端 <code>open /usr/local/lib/ruby/gems/2.3.0/gems/cocoapods-1.3.0.beta.2/lib/</code></h6>

<p>将第一步命令输出的结果去掉最后的文件名<code>cocoapods.rb</code>，将前面的路径加到 <code>open</code>命令的后面, 执行命令后会在Finder打开一个<strong><code>lib</code>文件夹</strong></p>

<h6 id="toc_8">3. 在当前<code>lib</code>目录下有个<code>cocoapods</code>文件夹，进入，<code>validator.rb</code>文件就在这个文件夹里</h6>

<h4 id="toc_9">如何修改它？</h4>

<p>找到下面的代码</p>

<p><img src="https://raw.githubusercontent.com/doge1024/doge1024.github.io/saveImage/image/20210605142004.png" alt="20210605142004" class="mw_img_center" style="width:1020px;display: block; clear:both; margin: 0 auto;"/><br/>
改成下面的样子</p>

<p><img src="https://raw.githubusercontent.com/doge1024/doge1024.github.io/saveImage/image/20210605142024.png" alt="20210605142024" class="mw_img_center" style="width:1020px;display: block; clear:both; margin: 0 auto;"/></p>

<p>这样每次向仓库推送podspec文件的时候，都会直接打印一下<code>xcodebuild --help</code> 然后就算作通过验证了<br/>
接下来你就可以安心的 push 你的代码了 <br/>
像一些x86_64，i386，不支持模拟器啦，这种都是小case，所有编译错误都可以解决</p>

<h4 id="toc_10">注意</h4>

<ol>
<li>此方法因为太叼，不到万不得已，不能使用，过分依赖容易走火入魔
<img src="https://raw.githubusercontent.com/doge1024/doge1024.github.io/saveImage/image/20210605142045.png" alt="20210605142045" class="mw_img_center" style="width:200px;display: block; clear:both; margin: 0 auto;"/></li>
<li>一定在本地先以<code>:path</code>、<code>:git</code> 等的方式集成一下，确认没问题后再往仓库推</li>
<li>搞完以后记得改回到原来的代码，毕竟做库是为了项目使用的，多点检测也是为了保证质量</li>
</ol>

<h3 id="toc_11">第三种：正常却又有点麻烦的操作</h3>

<blockquote>
<p>模拟器 32 位处理器测试需要 i386 架构，<br/>
模拟器 64 位处理器测试需要 x86_64 架构，<br/>
真机 32 位处理器需要 armv7 ,或者 armv7s 架构，<br/>
真机 64 位处理器需要 arm64 架构。</p>
</blockquote>

<p>第二种方法可以将验证的命令替换为 <code>xcodebuild --help</code>，那么也就可以替换为正常的真机校验命令：</p>

<p><code>command += %w(-sdk iphoneos12.2 -destination=generic/iOS ONLY_ACTIVE_ARCH=YES ARCHS=armv64)</code> 。</p>

<p>将验证的设备改为通用 iOS 设备 <code>generic/iOS</code>，sdk 根据自己电脑 xcode 版本来设置 <code>iphoneos12.2</code>，ARCHS 根据自己支持的真机选择架构 <code>arm64</code>，可以根据自己的电脑，仿照上面的命令进行更改。</p>

<p>此命令会验证 pod 库在真机上的表现，效果应该是最接近原本 cocoapods 命令的本意，但是里面的 sdk 版本 和 cocoapods 版本 在升级时都需要重新设置。<br/>
<img src="https://raw.githubusercontent.com/doge1024/doge1024.github.io/saveImage/image/20210605142103.png" alt="截图为 cocoapods v1.5.3" class="mw_img_center" style="width:1020px;display: block; clear:both; margin: 0 auto;"/></p>

<h6 id="toc_12">参考文章</h6>

<ol>
<li>cocoapods的github上有个<a href="https://github.com/CocoaPods/CocoaPods/issues/5854">issues</a></li>
<li><a href="http://www.jianshu.com/p/9d32368ae3b2">待解决 pod lib lint pod不支持i386编译环境，如何避开</a></li>
</ol>

]]></content>
  </entry>
  
</feed>
